{"version":3,"sources":["components/images/lime.jpg","components/layout/navbar/Navbar.js","components/layout/footer/Footer.js","components/gallery-recipes/GalleryRecipies.js","components/home/Home.js","components/images/directions.png","components/commons/CircularProgressWithLabel.js","components/unlock-work/UnlockWork.js","components/details-recipe/DetailsRecipe.js","components/create-recipe/CreateRecipe.js","components/images/dem.jpg","components/images/hot.png","components/images/pizza1.jpeg","components/images/art.png","components/images/ham.png","components/images/share.png","components/landing-page/LandingPage.js","components/images/chef_.jpg","components/donate-nft/DonateNFT.js","components/profiles/Profile.js","components/covalent-allNftsByContract/CovalentAllNftsByContract.js","App.js","reportWebVitals.js","index.js","../node_modules/@unstoppabledomains/resolution/build/utils sync"],"names":["Navbar","withRouter","account","connectWallet","loadWeb3","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","setudUser","isMenuOpen","Boolean","isMobileMenuOpen","uauth","UAuth","clientID","clientSecret","redirectUri","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","color","Badge","badgeContent","StylesProvider","injectFirst","className","AppBar","position","Toolbar","to","src","logo","alt","Typography","variant","noWrap","Button","component","Link","endIcon","substring","logout","catch","error","console","edge","Footer","Grid","Container","container","item","xs","sm","RouterLink","Date","getFullYear","GalleryRecipies","recipesData","setRecipesData","setLoading","useEffect","a","fetch","headers","Authorization","cids","json","temp","value","cid","data","dataArray","description","split","creator","type","intro","getImage","ipfsURL","image","created","push","log","loadRecipes","style","minHeight","paddingBottom","spacing","length","map","recipe","index","textDecoration","Card","CardMedia","height","paddingTop","title","name","CardContent","textAlign","Box","borderColor","paddingLeft","Rating","readOnly","verticalAlign","fontSize","fontWeight","home","handleSubmit","e","preventDefault","Chip","size","label","clickable","CircularProgressWithLabel","props","justifyContent","display","CircularProgress","width","top","left","bottom","right","alignItems","Math","round","CircularStatic","progress","setPogress","timer","setInterval","prevProgress","clearInterval","protoTypes","PropTypes","number","isRequired","imgData","img","author","featured","UnlockWork","petName","unlock","checkout","setUnlock","modalIsOpen","setIsOpen","openModal","closeModal","isOpen","onRequestClose","marginRight","transform","flexWrap","overflow","backgroundColor","marginTop","ImageList","rowHeight","gap","ImageListItem","cols","rows","ImageListItemBar","actionIcon","actionPosition","background","DetailsRecipe","contractData","recipeId","useParams","setRecipe","setCodeHash","ingredients","Prep","Cook","Total","Servings","Directions","getMetadata","pet","Owner","likes","comments","content","mintNFT","methods","send","from","checked","setChecked","handleCheckBox","target","textAling","pathname","state","margin","gutterBottom","ingredient","Checkbox","onChange","inputProps","DirectionImg","direction","listStyle","window","unlockProtocol","loadCheckoutModal","addEventListener","detail","alert","CreateRecipe","history","useHistory","petTypeRef","createRef","setImage","imageName","setImageName","imageType","setImageType","setPetName","ownerName","setOwnerName","petType","setPetType","setIntro","loading","client","NFTStorage","token","store","File","URL","createObjectURL","noValidate","autoComplete","accept","defaultValue","files","htmlFor","TextField","fullWidth","select","ref","LadingPage","fileData","loadCommunity","count","call","i","communityList","community","getCommunityList","role","nft","hotRecipes","art","ham","share","DonateNFT","setDescription","mintAddress","setMintAddress","codeHash","transaction_hash","mint_to_address","rel","href","transaction_external_url","delay","required","form","FormData","append","options","method","body","URLSearchParams","chain","msg","then","response","responseJson","toast","Profile","nfts","setNfts","setData","donating","setDonating","useLocation","covalentNfts","historyResult","items","nft_data","chef","project","md","external_data","token_id","token_balance","supports_erc","owner","original_owner","CovalentAllNftsByContract","setItems","allNFTS","updated_at","pagination","total_count","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","legislator","key","AverageRating","overallRating","AverageBLKRating","overallBlkRating","Avatar","photoUrl","contract_name","contract_address","contract_ticker_symbol","contract_decimals","logo_url","align","chefContractAddress","App","setAccount","setContractData","useMoralis","authenticate","isAuthenticated","user","ethereum","web3","Web3","request","currentProvider","getContract","eth","getAccounts","accounts","abi","playerAbi","myContract","Contract","exact","path","Home","contractAddress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","appId","serverUrl","document","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.de36e0eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/lime.e2fc6c00.jpg\";","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport VerifiedUserSharpIcon from '@material-ui/icons/VerifiedUserSharp'\nimport InputBase from '@material-ui/core/InputBase'\nimport Badge from '@material-ui/core/Badge'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport MailIcon from '@material-ui/icons/Mail'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport './Navbar.css'\nimport UAuth from '@uauth/js'\n\nimport logo from '../../images/lime.jpg'\n\nexport const Navbar = withRouter(({ account, loadWeb3, connectWallet }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n  const [udUser, setudUser] = React.useState('')\n\n  const isMenuOpen = Boolean(anchorEl)\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n  // Add unstoppable Domain\n  const uauth = new UAuth({\n    clientID: '1qL/a088+wTZYAvwONOEpZ8yMCUHhd6O5KWgoXhPG0s=',\n    clientSecret: 'RGVCy3uuuBohKZFjUiRGBbUhLDy6jP8lOcQk0mrhcVs=',\n    redirectUri: 'https://art-plus-food.netlify.app/callback',\n  })\n  const unstoppableDomainsLogin = async () => {\n    try {\n      const authorization = await uauth.loginWithPopup()\n      const currentUser = authorization.idToken.sub\n      setudUser(currentUser)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  const unstoppableDomainsLogout = () => {\n    uauth.logout().catch((error) => {\n      console.error('profile error:', error)\n    })\n    setudUser('')\n  }\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null)\n  }\n\n  const handleMenuClose = () => {\n    setAnchorEl(null)\n    handleMobileMenuClose()\n  }\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget)\n  }\n\n  const menuId = 'primary-search-account-menu'\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  )\n\n  const mobileMenuId = 'primary-search-account-menu-mobile'\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  )\n\n  return (\n    <StylesProvider injectFirst>\n      <div className=\"grow\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Link to=\"/\" className=\"whiteLink\">\n              <img src={logo} alt=\"logo\" className=\"logo\" />\n            </Link>\n            <Link to=\"/\" className=\"whiteLink\">\n              <Typography className=\"title\" variant=\"h6\" noWrap>\n                Art⨁Food\n              </Typography>\n            </Link>\n\n            <Button className=\"whiteLink\" component={Link} to=\"/\">\n              Home\n            </Button>\n\n            <Button className=\"whiteLink\" component={Link} to=\"/collections\">\n              Collections\n            </Button>\n\n            <Button className=\"whiteLink\" component={Link} to=\"/create-recipe\">\n              Create Recipe\n            </Button>\n\n            <Button\n              className=\"whiteLink\"\n              component={Link}\n              to=\"/all-nfts-contract\"\n            >\n              Statistics\n            </Button>\n\n            <div className=\"grow\" />\n            <div className=\"sectionDesktop\">\n              {account ? (\n                <>\n                  <Button\n                    variant=\"contained\"\n                    className=\"connected-btn\"\n                    endIcon={<VerifiedUserSharpIcon />}\n                  >\n                    {account.substring(0, 8)}...{account.substring(38)}\n                  </Button>\n                  <Button\n                    className=\"whiteLink\"\n                    to=\"/create-recipe\"\n                    onClick={unstoppableDomainsLogout}\n                  >\n                    Logout\n                  </Button>\n                </>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  className=\"connect-wallet-btn\"\n                  onClick={() => connectWallet()}\n                >\n                  Connect Wallet\n                </Button>\n              )}\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <NotificationsIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n        {renderMenu}\n      </div>\n    </StylesProvider>\n  )\n})\n","import React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport {\n  AppBar,\n  Container,\n  Grid,\n  Link,\n  StylesProvider,\n  Typography,\n} from '@material-ui/core'\nimport './Footer.css'\nimport logo from '../../../components/images/lime.jpg'\n\nfunction Footer() {\n  return (\n    <StylesProvider injectFirst>\n      <footer>\n        <AppBar className=\"primary-color marginT-3 pad-2\" position=\"static\">\n          <Grid component={Container} container>\n            <Grid item xs={12} sm={3}>\n              <img src={logo} alt=\"logo\" className=\"footer-logo\" />\n            </Grid>\n\n            <Grid item xs={12} sm={9} className=\"links\">\n              <Link className=\"link\" component={RouterLink} to=\"/\">\n                Home\n              </Link>\n              <span>/</span>\n\n              <Link className=\"link\" component={RouterLink} to=\"/\">\n                About\n              </Link>\n              <span>/</span>\n\n              <Link className=\"link\" component={RouterLink} to=\"/\">\n                Create a Recipe\n              </Link>\n              <span>/</span>\n\n              <Link className=\"link\" component={RouterLink} to=\"/\">\n                Get Started\n              </Link>\n              <span>/</span>\n\n              <Link className=\"link\" component={RouterLink} to=\"/\">\n                Terms\n              </Link>\n              <span>/</span>\n\n              <Link className=\"link\" component={RouterLink} to=\"/\">\n                Privacy\n              </Link>\n            </Grid>\n\n            <Grid item xs={12} sm={3}></Grid>\n\n            <Grid item xs={12} sm={9}>\n              <Typography className=\"copyright\">\n                Copyright &copy; {new Date().getFullYear()} Recipe Sharing\n              </Typography>\n            </Grid>\n          </Grid>\n        </AppBar>\n      </footer>\n    </StylesProvider>\n  )\n}\n\nexport default Footer\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  Box,\n} from '@material-ui/core'\nimport Rating from '@material-ui/lab/Rating'\nfunction GalleryRecipies() {\n  const apiKey =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweGJjNGRiNTBjZkFiY0I3OTFlOWE5MENENjUwNWI1NEI4NzljYjIxYzAiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYyOTQwMzA2NDkxMSwibmFtZSI6IkFydEZvb2QifQ.99NeYMsijxvIOvmQnq8twQz-UbQR_UGUT-pwj91pJRw'\n  const [recipesData, setRecipesData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const loadRecipes = async () => {\n      try {\n        setLoading(true)\n\n        let cids = await fetch('https://api.nft.storage', {\n          headers: {\n            Authorization: `Bearer ${apiKey}`,\n            'Content-Type': 'application/json',\n          },\n        })\n        cids = await cids.json()\n        const temp = []\n        for (let cid of cids.value) {\n          if (cid?.cid) {\n            let data = await fetch(\n              `https://ipfs.io/ipfs/${cid.cid}/metadata.json`,\n            )\n\n            data = await data.json()\n            const dataArray = data.description.split(',')\n            data.creator = dataArray[0]\n            data.type = dataArray[1]\n            data.intro = dataArray[2]\n\n            // formats the imageURL\n            const getImage = (ipfsURL) => {\n              if (!ipfsURL) return\n              ipfsURL = ipfsURL.split('://')\n              return 'https://ipfs.io/ipfs/' + ipfsURL[1]\n            }\n\n            data.image = await getImage(data.image)\n            data.cid = cid.cid\n            data.created = cid.created\n            temp.push(data)\n          }\n        }\n        setRecipesData(temp)\n        setLoading(false)\n      } catch (error) {\n        console.log(error)\n        setLoading(false)\n      }\n    }\n    loadRecipes()\n  }, [])\n\n  const data = [\n    {\n      image:\n        'https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F8132935.jpg',\n      name: 'Classic Shrimp Scampi',\n      creator: 'Angela Smith',\n      intro: 'A wonderfully easy and quick scampi recipe!',\n      rating: 4,\n      image2: '',\n      image3: '',\n    },\n    {\n      image:\n        'https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F8132935.jpg',\n      name: 'Classic Shrimp Scampi',\n      creator: 'Angela Smith',\n      intro: 'A wonderfully easy and quick scampi recipe!',\n      rating: 4,\n      image2: '',\n      image3: '',\n    },\n    {\n      image:\n        'https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F8132935.jpg',\n      name: 'Classic Shrimp Scampi',\n      creator: 'Angela Smith',\n      intro: 'A wonderfully easy and quick scampi recipe!',\n      rating: 4,\n      image2: '',\n      image3: '',\n    },\n    {\n      image:\n        'https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F8132935.jpg',\n      name: 'Classic Shrimp Scampi',\n      creator: 'Angela Smith',\n      intro: 'A wonderfully easy and quick scampi recipe!',\n      rating: 4,\n      image2: '',\n      image3: '',\n    },\n    {\n      image:\n        'https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F8132935.jpg',\n      name: 'Classic Shrimp Scampi',\n      creator: 'Angela Smith',\n      intro: 'A wonderfully easy and quick scampi recipe!',\n      rating: 4,\n      image2: '',\n      image3: '',\n    },\n    {\n      image:\n        'https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F8132935.jpg',\n      name: 'Classic Shrimp Scampi',\n      creator: 'Angela Smith',\n      intro: 'A wonderfully easy and quick scampi recipe!',\n      rating: 4,\n      image2: '',\n      image3: '',\n    },\n    {\n      image:\n        'https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F8132935.jpg',\n      name: 'Classic Shrimp Scampi',\n      creator: 'Angela Smith',\n      intro: 'A wonderfully easy and quick scampi recipe!',\n      rating: 4,\n      image2: '',\n      image3: '',\n    },\n    {\n      image:\n        'https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F8132935.jpg',\n      name: 'Classic Shrimp Scampi',\n      creator: 'Angela Smith',\n      intro: 'A wonderfully easy and quick scampi recipe!',\n      rating: 4,\n      image2: '',\n      image3: '',\n    },\n  ]\n\n  return (\n    <div style={{ minHeight: '70vh', paddingBottom: '3rem' }}>\n      <Grid container spacing={1}>\n        {recipesData.length ? (\n          recipesData.map((recipe, index) => (\n            <Grid\n              item\n              xs={6}\n              sm={3}\n              key={index}\n              style={{ paddingBottom: '2rem' }}\n            >\n              <Link\n                to={`recipe/${recipe.cid}`}\n                style={{ textDecoration: 'none' }}\n              >\n                <Card>\n                  <CardMedia\n                    style={{ height: '8rem', paddingTop: '56.25%' }}\n                    image={recipe.image}\n                    title={recipe.name}\n                  />\n\n                  <CardContent style={{ textAlign: 'initial' }}>\n                    <Typography variant=\"subtitle1\" color=\"textPrimary\">\n                      {recipe.name}\n                    </Typography>\n\n                    <Box\n                      component=\"fieldset\"\n                      borderColor=\"transparent\"\n                      style={{ height: '20px', paddingLeft: '0px' }}\n                    >\n                      <Rating name=\"read-only\" value={5} readOnly />\n                      <span\n                        style={{\n                          verticalAlign: 'super',\n                          fontSize: '0.75rem',\n                          paddingLeft: '0.5rem',\n                        }}\n                      >\n                        0\n                      </span>\n                    </Box>\n\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      Type: {recipe.type}\n                    </Typography>\n\n                    <Typography\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      {recipe.intro}\n                    </Typography>\n\n                    <Typography\n                      variant=\"body1\"\n                      color=\"textSecondary\"\n                      component=\"p\"\n                    >\n                      <span style={{ fontSize: '0.87rem' }}>By </span>\n                      <span style={{ fontWeight: 'bold', fontSize: '0.87rem' }}>\n                        {recipe.creator}\n                      </span>\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Link>\n            </Grid>\n          ))\n        ) : (\n          <h2>No Recipes Yet...</h2>\n        )}\n      </Grid>\n    </div>\n  )\n}\n\nexport default GalleryRecipies\n","import React from 'react'\nimport { StylesProvider, Container, Chip } from '@material-ui/core'\nimport './Home.css'\nimport GalleryRecipies from '../gallery-recipes/GalleryRecipies'\n\nfunction home() {\n  const handleSubmit = (e) => {\n    e.preventDefault()\n  }\n  return (\n    <StylesProvider injectFirst>\n      <Container>\n        <div className=\"label-btns\">\n          <Chip\n            size=\"medium\"\n            label=\"All recipes\"\n            color=\"primary\"\n            clickable\n            onClick={handleSubmit}\n          />\n\n          <Chip size=\"medium\" label=\"Soups\" clickable onClick={handleSubmit} />\n\n          <Chip size=\"medium\" label=\"Pastas\" clickable onClick={handleSubmit} />\n\n          <Chip size=\"medium\" label=\"Salads\" clickable onClick={handleSubmit} />\n        </div>\n        <GalleryRecipies />\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default home\n","export default __webpack_public_path__ + \"static/media/directions.acb27a39.png\";","import React, { useState, useEffect } from 'react'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types'\nimport { CircularProgress, Typography, Box } from '@material-ui/core'\n\nfunction CircularProgressWithLabel(props) {\n  return (\n    <div\n      style={{\n        height: 'auto',\n        textAlign: 'center',\n        justifyContent: 'center',\n        paddingTop: '5rem',\n      }}\n    >\n      <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress\n          variant=\"determinate\"\n          {...props}\n          style={{ width: '200px', height: '200px' }}\n        />\n        <Box\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography\n            variant=\"caption\"\n            component=\"div\"\n            color=\"textSecondary\"\n            style={{ fontSize: '1rem' }}\n          >\n            {`${Math.round(props.value)}%`}\n          </Typography>\n        </Box>\n      </Box>\n    </div>\n  )\n}\n\nCircularProgressWithLabel.protoTypes = {\n  value: PropTypes.number.isRequired,\n}\n\nexport default function CircularStatic() {\n  const [progress, setPogress] = useState(10)\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setPogress((prevProgress) =>\n        prevProgress >= 100 ? 0 : prevProgress + 10,\n      )\n    }, 800)\n    return () => {\n      clearInterval(timer)\n    }\n  }, [])\n\n  return <CircularProgressWithLabel value={progress} />\n}\n","import React from 'react'\nimport {\n  ImageList,\n  ImageListItem,\n  ImageListItemBar,\n  IconButton,\n  Button,\n} from '@material-ui/core'\nimport ReactDOM from 'react-dom'\nimport Modal from 'react-modal'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\n\nconst imgData = [\n  {\n    img:\n      'https://raw.githubusercontent.com/electrone901/petgram/main/src/images/see-more-work/1.jpeg',\n    title: 'Buba',\n    author: 'David Guetta',\n    featured: true,\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/electrone901/petgram/main/src/images/see-more-work/2.jpg',\n    title: 'Mr Vens',\n    author: 'David Guetta',\n    featured: false,\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/electrone901/petgram/main/src/images/see-more-work/3.jpg',\n    title: 'Fionna',\n    author: 'David Guetta',\n    featured: false,\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/electrone901/petgram/main/src/images/see-more-work/4.jpeg',\n    title: 'goodie',\n    author: 'David Guetta',\n    featured: true,\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/electrone901/petgram/main/src/images/see-more-work/7.jpg',\n    title: 'Dorgey',\n    author: 'David Guetta',\n    featured: false,\n  },\n\n  {\n    img:\n      'https://raw.githubusercontent.com/electrone901/petgram/main/src/images/see-more-work/6.jpeg',\n    title: 'Little lion',\n    author: 'David Guetta',\n    featured: false,\n  },\n  {\n    img:\n      'https://raw.githubusercontent.com/electrone901/petgram/main/src/images/see-more-work/8.jpg',\n    title: 'Peggy',\n    author: 'David Guetta',\n    featured: true,\n  },\n]\n\nfunction UnlockWork({ petName, unlock, setUnlock, checkout }) {\n  const [modalIsOpen, setIsOpen] = React.useState(false)\n\n  const openModal = (image) => {\n    setIsOpen(true)\n  }\n\n  const closeModal = () => {\n    setIsOpen(false)\n  }\n  return (\n    <div\n      style={{ textAlign: 'center', paddingTop: '4rem', paddingBottom: '3rem' }}\n    >\n      {unlock ? (\n        <div>\n          <p>\n            Congratulations🎉🎉...!! Now you have acces exclusive content for 30\n            days. Thank you for your support.\n          </p>\n          <p style={{ fontWeight: 700 }}>{petName}~</p>\n\n          <div>\n            <Modal\n              isOpen={modalIsOpen}\n              onRequestClose={closeModal}\n              style={{\n                top: '50%',\n                left: '50%',\n                right: 'auto',\n                bottom: 'auto',\n                marginRight: '-50%',\n                transform: 'translate(-50%, -50%)',\n              }}\n              // contentLabel=\"Example Modal\"\n            >\n              <button onClick={closeModal}>close</button>\n              <img\n                src=\"https://raw.githubusercontent.com/electrone901/petgram/main/src/images/see-more-work/1.jpeg\"\n                alt=\"Buba\"\n                style={{\n                  width: '100%',\n                }}\n              />\n            </Modal>\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'space-around',\n              overflow: 'hidden',\n              backgroundColor: '#000000db',\n              marginTop: '5rem',\n            }}\n          >\n            <ImageList\n              rowHeight={200}\n              gap={1}\n              style={{ width: 550, transform: 'translateZ(0)' }}\n            >\n              {imgData.map((item) => (\n                <ImageListItem\n                  key={item.img}\n                  cols={item.featured ? 2 : 1}\n                  rows={item.featured ? 2 : 1}\n                  onClick={openModal}\n                >\n                  <img src={item.img} alt={item.title} />\n                  <ImageListItemBar\n                    title={item.title}\n                    position=\"top\"\n                    actionIcon={\n                      <IconButton\n                        aria-label={`star ${item.title}`}\n                        style={{ color: 'white' }}\n                      >\n                        <StarBorderIcon />\n                      </IconButton>\n                    }\n                    actionPosition=\"left\"\n                    style={{\n                      background:\n                        'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n                        'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n                    }}\n                  />\n                </ImageListItem>\n              ))}\n            </ImageList>\n          </div>\n        </div>\n      ) : (\n        <Button\n          variant=\"contained\"\n          style={{ backgroundColor: '#c329c8', fontWeight: 900 }}\n          color=\"primary\"\n          onClick={checkout}\n        >\n          Unlock to see more work 🔒\n        </Button>\n      )}\n    </div>\n  )\n}\n\nexport default UnlockWork\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport Grid from '@material-ui/core/Grid'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport ShareIcon from '@material-ui/icons/Share'\nimport Card from '@material-ui/core/Card'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { Link } from 'react-router-dom'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport {\n  TextField,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  IconButton,\n} from '@material-ui/core'\nimport DirectionImg from '../../../src/components/images/directions.png'\nimport './DetailsRecipe.css'\nimport { CircularStatic } from '../../components/commons/CircularProgressWithLabel'\nimport SeeMoreWork from '../unlock-work/UnlockWork'\n\nfunction DetailsRecipe({ account, contractData }) {\n  console.log('my contractData', contractData)\n  const { recipeId } = useParams()\n  const [recipe, setRecipe] = useState('')\n  const [image, setImage] = useState([])\n  const [petName, setPetName] = useState([])\n  const [petOwner, setOwnerName] = useState([])\n  const [petCategory, setPetCategory] = useState([])\n  const [petTransactions, setpetTransactions] = useState([])\n  const [comment, setComment] = useState('')\n  const [codeHash, setCodeHash] = useState('')\n\n  const [loading, setLoading] = useState(false)\n  const [unlock, setUnlock] = useState(false)\n\n  useEffect(() => {\n    const getImage = (ipfsURL) => {\n      if (!ipfsURL) return\n      ipfsURL = ipfsURL.split('://')\n      return 'https://ipfs.io/ipfs/' + ipfsURL[1]\n    }\n\n    const getMetadata = async () => {\n      let data = await fetch(`https://ipfs.io/ipfs/${recipeId}/metadata.json`)\n      data = await data.json()\n      const dataArray = data.description.split(',')\n      data.creator = dataArray[0]\n      data.type = dataArray[1]\n      data.intro = dataArray[2]\n      data.image = getImage(data.image)\n      data.ingredients = [\n        '10 large shrimp, heads off and unpeeled',\n        '1 tablespoon olive oil',\n        '3 cloves garlic, minced',\n        '4 tablespoons butter',\n        '½ teaspoon dried oregano',\n        'Add salt to taste',\n      ]\n      data.Prep = '15 mins'\n      data.Cook = '10 mins'\n      data.Total = '25 mins'\n      data.Servings = '4 servings'\n      data.Directions = [\n        'With a sharp knife, cut shrimp in half so that the meat is exposed in the shell.',\n        ' In a small saucepan, heat olive oil and lightly fry the garlic until just softened. Add butter and Oregano. Heat until butter has melted.',\n        'Preheat an outdoor grill for medium heat and lightly oil grate.',\n        'Lay shrimp out on a tray and brush generously with the butter mixture. Grill shrimp until lightly golden.',\n      ]\n      setRecipe(data)\n    }\n    if (recipeId) {\n      getMetadata()\n      getImage()\n    }\n  }, [recipeId, contractData])\n\n  const handleChange = (event) => {\n    setComment(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newObj = { author: 'Guest', content: comment }\n    const commentArr = [...pet.comments, newObj]\n    pet.comments = [...pet.comments, newObj]\n    setComment('')\n  }\n\n  let pet = {}\n  if (!recipeId) {\n    pet = {\n      name: 'Oliver',\n      img: 'https://siasky.net/OADaRfw_nMqqXCz5NXXLq5xN6R3nScEKbzsRdqdEQrLL5A',\n      type: 'Cat',\n      Owner: 'Luis C',\n      likes: 20,\n      comments: [\n        { author: 'Albert', content: 'This is awesome' },\n        { author: 'Angie', content: 'So Cute~' },\n      ],\n    }\n  }\n\n  const mintNFT = async () => {\n    console.log('recipe.image', recipe.image)\n    try {\n      const data = await contractData.methods\n        .mintNFT(recipe.image)\n        .send({ from: account })\n      console.log('data', data)\n      setCodeHash(data)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const checkout = () => {\n    window.unlockProtocol && window.unlockProtocol.loadCheckoutModal()\n    window.addEventListener('unlockProtocol.status', function (event) {\n      if (event.detail.state === 'unlocked') {\n        alert('Worked!')\n        setUnlock(true)\n      }\n    })\n  }\n\n  const [checked, setChecked] = React.useState(true)\n\n  const handleCheckBox = (event) => {\n    setChecked(event.target.checked)\n  }\n\n  return (\n    <StylesProvider injectFirst>\n      <Container className=\"root-pet-details\">\n        <div className=\"\">\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={6} className=\"grid-container\">\n              <Button\n                variant=\"contained\"\n                className=\"wallet-btn\"\n                color=\"primary\"\n                onClick={mintNFT}\n              >\n                Mint NFT\n              </Button>{' '}\n              <br />\n              <div style={{ textAling: 'center' }}>\n                <div className=\"chef-profile\">\n                  <img\n                    src=\"https://avatars.githubusercontent.com/u/10974517?v=4\"\n                    alt=\"chef\"\n                  />\n                  <Link\n                    to={{\n                      pathname: `/profile/${recipeId}`,\n                      state: { recipe: recipe },\n                    }}\n                  >\n                    <Typography>\n                      Recipe by <strong>{recipe.creator}</strong>\n                    </Typography>\n                  </Link>\n                </div>\n              </div>\n              <img className=\"img\" src={recipe.image} alt=\"pet\" />\n              <div className=\"flex-container\">\n                <div>\n                  <IconButton aria-label=\"add to favorites\">\n                    <FavoriteIcon />\n                  </IconButton>\n\n                  <IconButton aria-label=\"share\">\n                    <ShareIcon />\n                  </IconButton>\n                </div>\n\n                <Typography variant=\"body1\" color=\"primary\">\n                  {pet?.likes ? pet.likes : 0} Likes\n                </Typography>\n              </div>\n              <div className=\"specifications\">\n                <h2 style={{ margin: '3px' }}>{recipe.name}</h2>\n                <Typography\n                  gutterBottom\n                  variant=\"subtitle1\"\n                  color=\"textPrimary\"\n                >\n                  Recipe Specifications <span className=\"clock\">⏱</span>\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  color=\"textPrimary\"\n                  component=\"p\"\n                  className=\"details-text\"\n                >\n                  <span style={{ fontWeight: 'bold' }}>Cook: </span>\n                  <span>{recipe.Cook} </span>\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  color=\"textPrimary\"\n                  component=\"p\"\n                  className=\"details-text\"\n                >\n                  <span style={{ fontWeight: 'bold' }}>Total: </span>\n                  <span>{recipe.Total} </span>\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  color=\"textPrimary\"\n                  component=\"p\"\n                  className=\"details-text\"\n                >\n                  <span style={{ fontWeight: 'bold' }}>Servings: </span>\n                  <span>{recipe.Servings} </span>\n                </Typography>\n\n                <Typography\n                  variant=\"body1\"\n                  color=\"textPrimary\"\n                  component=\"p\"\n                  className=\"details-text\"\n                >\n                  <span style={{ fontWeight: 'bold' }}>Intro: </span>\n                  <span>\n                    {recipe.intro} Full rights and credits to the creator @\n                    {recipe.creator}.{' '}\n                  </span>\n                </Typography>\n              </div>\n            </Grid>\n\n            <Grid item xs={12} sm={6}>\n              <Card className=\"code-hash\">\n                <Typography\n                  gutterBottom\n                  variant=\"h5\"\n                  className=\"ingredients-title\"\n                >\n                  Ingredients\n                </Typography>\n\n                {recipe?.ingredients\n                  ? recipe.ingredients.map((ingredient, index) => {\n                      return (\n                        <div key={index}>\n                          <Checkbox\n                            checked={checked}\n                            onChange={handleCheckBox}\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                          />\n                          <span>{ingredient}</span>\n                        </div>\n                      )\n                    })\n                  : 'There are no ingredients for this recipe'}\n              </Card>\n\n              <div className=\"code-hash\">\n                <Typography\n                  gutterBottom\n                  variant=\"h5\"\n                  className=\"ingredients-title\"\n                >\n                  <img src={DirectionImg} alt=\"\" className=\"direction-img\" />\n                  Directions\n                </Typography>\n\n                {recipe?.Directions\n                  ? recipe.Directions.map((direction, index) => (\n                      <li\n                        key={index}\n                        style={{ listStyle: 'none', paddingBottom: '1rem' }}\n                      >\n                        {index + 1}. {direction}\n                      </li>\n                    ))\n                  : 'There are no ingredients for this recipe'}\n              </div>\n            </Grid>\n          </Grid>\n\n          <SeeMoreWork\n            petName={petName}\n            unlock={unlock}\n            setUnlock={setUnlock}\n            checkout={checkout}\n          />\n        </div>\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default DetailsRecipe\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  TextField,\n  Container,\n  StylesProvider,\n  Typography,\n  Button,\n  IconButton,\n  MenuItem,\n} from '@material-ui/core'\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\nimport { NFTStorage, File } from 'nft.storage'\nimport CircularStatic from '../commons/CircularProgressWithLabel'\nimport './CreateRecipe.css'\n\nfunction CreateRecipe() {\n  const apiKey =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweGJjNGRiNTBjZkFiY0I3OTFlOWE5MENENjUwNWI1NEI4NzljYjIxYzAiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYyOTQwMzA2NDkxMSwibmFtZSI6IkFydEZvb2QifQ.99NeYMsijxvIOvmQnq8twQz-UbQR_UGUT-pwj91pJRw'\n  const history = useHistory()\n  const petTypeRef = React.createRef()\n  const [image, setImage] = useState('')\n  const [imageName, setImageName] = useState('')\n  const [imageType, setImageType] = useState('')\n  const [petName, setPetName] = useState('')\n  const [ownerName, setOwnerName] = useState('')\n  const [petType, setPetType] = useState('')\n  const [intro, setIntro] = useState('A simple and quick  recipe!')\n  const [loading, setLoading] = useState(false)\n\n  const handleImage = (event) => {\n    setImage(event.target.files[0])\n    setImageName(event.target.files[0].name)\n    setImageType(event.target.files[0].type)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      setLoading(true)\n\n      const client = new NFTStorage({ token: apiKey })\n      const metadata = await client.store({\n        name: petName,\n        description: `${ownerName}, ${petType}, ${intro}`,\n        image: new File([image], imageName, { type: imageType }),\n      })\n      if (metadata) {\n        history.push('/')\n      }\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n  }\n\n  return (\n    <StylesProvider injectFirst>\n      <Container className=\"root-create-pet\">\n        {loading ? (\n          <CircularStatic />\n        ) : (\n          <div>\n            <Typography className=\"title\" color=\"textPrimary\" gutterBottom>\n              Add your Recipe and share your talent with the world.\n            </Typography>\n\n            {image ? (\n              <img\n                src={URL.createObjectURL(image)}\n                alt=\"pet\"\n                className=\"img-preview\"\n              />\n            ) : (\n              ''\n            )}\n            <div className=\"form-container\">\n              <form className=\"form\" noValidate autoComplete=\"off\">\n                <input\n                  accept=\"image/*\"\n                  className=\"input\"\n                  id=\"icon-button-photo\"\n                  defaultValue={image}\n                  onChange={handleImage}\n                  type=\"file\"\n                />\n                <label htmlFor=\"icon-button-photo\">\n                  <IconButton color=\"primary\" component=\"span\">\n                    <PhotoCamera />\n                  </IconButton>\n                </label>\n                <TextField\n                  fullWidth\n                  id=\"outlined-basic\"\n                  label=\"Recipe's name\"\n                  variant=\"outlined\"\n                  className=\"text-field\"\n                  defaultValue={petName}\n                  onChange={(e) => setPetName(e.target.value)}\n                />\n                <TextField\n                  fullWidth\n                  id=\"outlined-basic\"\n                  label=\"Creator name\"\n                  variant=\"outlined\"\n                  className=\"text-field\"\n                  defaultValue={ownerName}\n                  onChange={(e) => setOwnerName(e.target.value)}\n                />\n                <TextField\n                  fullWidth\n                  id=\"outlined-basic\"\n                  label=\"Recipe overwiew\"\n                  variant=\"outlined\"\n                  className=\"text-field\"\n                  defaultValue={intro}\n                  onChange={(e) => setIntro(e.target.value)}\n                />\n                <TextField\n                  fullWidth\n                  name=\"petType\"\n                  select\n                  label=\"Choose one option\"\n                  variant=\"outlined\"\n                  className=\"text-field\"\n                  onChange={(e) => setPetType(e.target.value)}\n                  defaultValue=\"\"\n                  ref={petTypeRef}\n                >\n                  <MenuItem value=\"Pasta & risotto\">Pasta & risotto</MenuItem>\n                  <MenuItem value=\"Salad\">Salad</MenuItem>\n                  <MenuItem value=\"Bread & doughs\">Bread & doughs</MenuItem>\n                  <MenuItem value=\"Soup\">Soup</MenuItem>\n                  <MenuItem value=\"BBQ food\">BBQ food</MenuItem>\n                  <MenuItem value=\"Pizza\">Pizza</MenuItem>\n                  <MenuItem value=\"Other\">Other</MenuItem>\n                </TextField>\n                <Button\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSubmit}\n                >\n                  Submit\n                </Button>\n              </form>\n            </div>\n          </div>\n        )}\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default CreateRecipe\n","export default __webpack_public_path__ + \"static/media/dem.906df3ae.jpg\";","export default __webpack_public_path__ + \"static/media/hot.eaacbe9c.png\";","export default __webpack_public_path__ + \"static/media/pizza1.3a34f2dd.jpeg\";","export default __webpack_public_path__ + \"static/media/art.36577366.png\";","export default __webpack_public_path__ + \"static/media/ham.ab0619ba.png\";","export default __webpack_public_path__ + \"static/media/share.11c870f1.png\";","import React, { useEffect } from 'react'\nimport { StylesProvider, Container } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport './LandingPage.css'\nimport nft from '../images/dem.jpg'\nimport pizza from '../images/pizza1.jpeg'\nimport hotRecipes from '../images/hot.png'\nimport art from '../images/art.png'\nimport ham from '../images/ham.png'\nimport share from '../images/share.png'\nimport WallpaperIcon from '@material-ui/icons/Wallpaper'\nimport Icon from '@material-ui/core/Icon'\n\nfunction LadingPage({\n  account = 0x5df598c222c4a7e8e4ab9f347dcbd924b6458382,\n  contractData,\n}) {\n  useEffect(() => {\n    const loadCommunity = async () => {\n      try {\n        const cid = 'QmTFaLUesrjbQLKxNszz2DWZ33N9YuGBSVCLpwXnvyiumz'\n\n        let fileData = await fetch(`https://ipfs.io/ipfs/${cid}`)\n        const yourData = await fileData.json()\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    loadCommunity()\n\n    //\n    const getCommunityList = async () => {\n      try {\n        // gets communityCount from chain\n        const count = await contractData.methods.count().call()\n        // gets community data\n        const temp = []\n        for (let i = count; i >= 1; i--) {\n          const community = await contractData.methods.communityList(i).call()\n          temp.push(community)\n        }\n        // setCommunities(temp)\n      } catch (error) {\n        console.log(error)\n        // setLoading(false)\n      }\n    }\n    getCommunityList()\n    //\n  }, [])\n\n  return (\n    <StylesProvider injectFirst>\n      <Container>\n        <section className=\"hero\" role=\"banner\">\n          <div className=\"container\">\n            <div className=\"hero__text container--pall\">\n              <h6 className=\"wow fadeInUp animated\" data-wow-delay=\".5s\">\n                <span className=\"text-uppercase\">\n                  Art Plus Food MarketPLACE\n                </span>\n              </h6>\n\n              <h1 className=\"home-titles\">\n                Create, sell or collect Chef's recipes.\n              </h1>\n\n              <p className=\"lead\">\n                World Cuisine, Breakfasts, Cocktails, Pastry, Bakery,\n                Gastronomy, Chef Clubs Membership, Traditional delicatessen..\n                &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\n              </p>\n\n              <Link to=\"/collections\" className=\"button-gren-padding hero_cta\">\n                Explore\n              </Link>\n            </div>\n\n            <div className=\"hero__image\">\n              <img src={nft} alt=\"\" className=\"food\" />\n            </div>\n          </div>\n        </section>\n\n        <section className=\"how-works\">\n          <Grid container direction=\"row\" spacing={2}>\n            <Grid item xs>\n              <div className=\"col-works\">\n                <h3>1. Connect your wallet</h3>\n\n                <p className=\"how-works-description\">\n                  Connect using Web 3.0 Technology by clicking on the top right\n                  corner button.\n                </p>\n              </div>\n            </Grid>\n\n            <Grid item xs>\n              <div className=\"col-works\">\n                <h3> 2. Add your Recipes</h3>\n                <p className=\"how-works-description\">\n                  Mint your recipe or Membership token directly from your\n                  account, add it to a cookbook (collection) and define\n                  unlockable content.\n                </p>\n              </div>\n            </Grid>\n\n            <Grid item xs>\n              <div className=\"col-works\">\n                <h3> 3. Sell your NFT's</h3>\n                <p className=\"how-works-description\">\n                  Choose the license, the royalties model and put your recipes,\n                  membership or products on the marketplace.\n                </p>\n              </div>\n            </Grid>\n          </Grid>\n        </section>\n\n        {/* here */}\n        <section className=\"how-works\">\n          <img src={hotRecipes} alt=\"hotRecipes\" />\n          <h2>Browse by category</h2>\n\n          <Grid container direction=\"row\" spacing={2}>\n            <Grid item xs>\n              <div className=\"\">\n                <h3>Art</h3>\n                <img src={art} alt=\"\" className=\"pics\" />\n              </div>\n            </Grid>\n            <Grid item xs>\n              <div className=\"\">\n                <h3>Fresh Ingredients</h3>\n                <img src={ham} alt=\"\" className=\"pics\" />\n              </div>\n            </Grid>\n            <Grid item xs>\n              <div className=\"\">\n                <h3>Local</h3>\n                <img src={share} alt=\"\" className=\"pics\" />\n              </div>\n            </Grid>\n          </Grid>\n        </section>\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default LadingPage\n","export default __webpack_public_path__ + \"static/media/chef_.41158c97.jpg\";","import React, { useState } from 'react'\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\nimport './DonateNFT.css'\nimport {\n  TextField,\n  Container,\n  StylesProvider,\n  Typography,\n  Button,\n  IconButton,\n  Card,\n} from '@material-ui/core'\nimport { toast } from 'react-toast'\nimport { ToastContainer } from 'react-toast'\n\nfunction DonateNFT() {\n  const apiKeyport = '5aca4bfa-4460-4000-ada2-dfe2b88831e8'\n  const [image, setImage] = useState('')\n  const [imageName, setImageName] = useState('')\n  const [description, setDescription] = useState('')\n  let [mintAddress, setMintAddress] = useState(\n    '0x5Df598c222C4A7e8e4AB9f347dcBd924B6458382',\n  )\n  const [codeHash, setCodeHash] = useState('')\n\n  const showError = () => toast.error('Oops! Some error occurred. Try again! ')\n  const showSuccess = () => toast('Yay your NFT was sent successfully!')\n  const mintWithNFTPort = (event) => {\n    event.preventDefault()\n    setImage(event.target.files[0])\n    if (mintAddress === '') {\n      mintAddress = '0xAF67cbD8fb00759C3b4667beAcfBB3600e25476A'\n      // mintAddress = '0x5Df598c222C4A7e8e4AB9f347dcBd924B6458382'\n    }\n    console.log(' image', event.target.files[0])\n    const form = new FormData()\n    form.append('file', event.target.files[0])\n\n    const options = {\n      method: 'POST',\n      body: form,\n      headers: {\n        Authorization: apiKeyport,\n      },\n    }\n\n    fetch(\n      'https://api.nftport.xyz/easy_mint?' +\n        new URLSearchParams({\n          chain: 'polygon',\n          name: imageName,\n          description: description,\n          mint_to_address: mintAddress,\n          msg: 'This is a gift for being a great food creator!',\n        }),\n      options,\n    )\n      .then(function (response) {\n        return response.json()\n      })\n      .then(function (responseJson) {\n        if (responseJson) {\n          showSuccess()\n\n          setCodeHash(responseJson)\n        } else {\n          showError()\n        }\n        console.log(responseJson)\n      })\n  }\n\n  return (\n    <StylesProvider injectFirst>\n      <Container\n        className=\"root-create-pet\"\n        style={{ minHeight: '80vh', paddingBottom: '3rem' }}\n      >\n        <div>\n          {codeHash ? (\n            <Card className=\"code-hash\">\n              <Typography gutterBottom className=\"title\">\n                Your NFT was minted succesfully 🎉\n              </Typography>\n\n              <Typography gutterBottom variant=\"subtitle1\">\n                Confirmation Transaction:\n              </Typography>\n              <p> {codeHash.transaction_hash}</p>\n\n              <br />\n              <p>MintedAddress:</p>\n              <p>{codeHash.mint_to_address}</p>\n\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={codeHash.transaction_external_url}\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"transaction-btn\"\n                >\n                  See transaction details\n                </Button>\n              </a>\n            </Card>\n          ) : (\n            ''\n          )}\n          <br />\n          <br />\n          <br />\n          <Typography className=\"title\" color=\"textPrimary\" gutterBottom>\n            Donate NFTs\n          </Typography>\n\n          {/* Add Form */}\n          {image ? (\n            <img\n              src={URL.createObjectURL(image)}\n              alt=\"pet\"\n              className=\"img-preview\"\n            />\n          ) : (\n            ''\n          )}\n          <div className=\"form-container\">\n            <ToastContainer delay={3000} />\n            <form className=\"form\" noValidate autoComplete=\"off\">\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                label=\"NFT's name\"\n                variant=\"outlined\"\n                className=\"text-field\"\n                defaultValue={imageName}\n                onChange={(e) => setImageName(e.target.value)}\n                required\n              />\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                label=\"Short description\"\n                variant=\"outlined\"\n                className=\"text-field\"\n                defaultValue={description}\n                onChange={(e) => setDescription(e.target.value)}\n                required\n              />\n\n              <TextField\n                fullWidth\n                id=\"outlined-basic\"\n                label=\"Sent to wallet Address \"\n                variant=\"outlined\"\n                className=\"text-field\"\n                defaultValue={mintAddress}\n                onChange={(e) => setMintAddress(e.target.value)}\n                required\n              />\n\n              <input\n                accept=\"image/*\"\n                className=\"input\"\n                id=\"icon-button-photo\"\n                defaultValue={image}\n                onChange={mintWithNFTPort}\n                type=\"file\"\n              />\n\n              <label htmlFor=\"icon-button-photo\">\n                <IconButton color=\"primary\" component=\"span\">\n                  <PhotoCamera />\n                </IconButton>\n              </label>\n\n              <Button size=\"large\" variant=\"contained\" color=\"primary\">\n                Upload & Submit\n              </Button>\n            </form>\n          </div>\n        </div>\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default DonateNFT\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  StylesProvider,\n  Container,\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n} from '@material-ui/core'\nimport { useParams, useLocation } from 'react-router-dom'\nimport CircularStatic from '../commons/CircularProgressWithLabel'\nimport './Profile.css'\nimport chef from '../images/chef_.jpg'\nimport DonateNFT from '../donate-nft/DonateNFT'\n\nfunction Profile({ account }) {\n  const { recipeId } = useParams()\n  const [loading, setLoading] = useState(false)\n  const userWallet = '0xAF67cbD8fb00759C3b4667beAcfBB3600e25476A'\n  // const userWallet = '0x5Df598c222C4A7e8e4AB9f347dcBd924B6458382'\n  const [nfts, setNfts] = useState([])\n  const [data, setData] = useState({})\n  const [donating, setDonating] = useState(false)\n  const { state = {} } = useLocation()\n\n  const covalentNfts = async () => {\n    const covalentAPI = 'ckey_748a7d4669e44381acb018c5d6a'\n    try {\n      const historyResult = await fetch(\n        `https://api.covalenthq.com/v1/137/address/${userWallet}/balances_v2/?nft=true&key=${covalentAPI}`,\n      )\n      const { data } = await historyResult.json()\n      console.log(' data covalentAPI', data)\n\n      if (data) {\n        setNfts(data.items[0].nft_data)\n        setLoading(false)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    covalentNfts()\n  }, [])\n\n  useEffect(() => {\n    const getImage = (ipfsURL) => {\n      if (!ipfsURL) return\n      ipfsURL = ipfsURL.split('://')\n      return 'https://ipfs.io/ipfs/' + ipfsURL[1]\n    }\n\n    const getMetadata = async () => {\n      let data = await fetch(`https://ipfs.io/ipfs/${recipeId}/metadata.json`)\n      data = await data.json()\n      const dataArray = data.description.split(',')\n      data.creator = dataArray[0]\n      data.type = dataArray[1]\n      data.intro = dataArray[2]\n      data.image = getImage(data.image)\n      setData(data)\n    }\n    if (recipeId) {\n      getMetadata()\n      getImage()\n    }\n  }, [recipeId, account])\n\n  return (\n    <StylesProvider injectFirst>\n      <Container style={{ paddingTop: '1rem' }}>\n        <img src={chef} alt=\"profile\" className=\"profile-img\" />\n        <h2>{state?.recipe?.creator}</h2>\n        <Button variant=\"contained\" className=\"connect-wallet-btn\">\n          + Follow\n        </Button>{' '}\n        &nbsp;\n        <Button\n          variant=\"contained\"\n          className=\"connect-wallet-btn\"\n          onClick={() => setDonating(true)}\n        >\n          Donate to creator\n        </Button>\n        {donating ? <DonateNFT /> : ''}\n        <h3>NFTs from Covalent API</h3>\n        {loading ? (\n          <CircularStatic />\n        ) : (\n          <div>\n            {nfts && nfts.length ? (\n              nfts.map((project, index) => (\n                <Card className=\"card-padding\" key={index}>\n                  <Grid container spacing={1}>\n                    <Grid item xs={4} md={2}>\n                      <img\n                        className=\"nft-img\"\n                        src={project.external_data.image}\n                        alt=\"nft\"\n                      />\n                    </Grid>\n                    <Grid item xs={8} md={10} className=\"nft-col2\">\n                      <div className=\"container-flex\">\n                        <h2 className=\"inner2\">{project.external_data.name}</h2>\n                        <p className=\"info\">\n                          TokenId: <strong>{project.token_id}</strong>\n                        </p>\n                      </div>\n\n                      <p className=\"info\">\n                        <strong>Token Balance: </strong>\n                        {project.token_balance}\n                      </p>\n                      <p className=\"info\">\n                        <strong>Tokens supported: </strong>\n                        {project.supports_erc.length > 0 ? (\n                          project.supports_erc.map((index) => (\n                            <span>{index}, </span>\n                          ))\n                        ) : (\n                          <p>ERC20</p>\n                        )}\n                      </p>\n                      <p className=\"info\">\n                        <strong>Owner: </strong>\n                        {project.owner}\n                      </p>\n                      <p className=\"info\">\n                        <strong>Original owner: </strong>\n                        {project.original_owner}\n                      </p>\n                      <p className=\"info\">\n                        <strong>Desc: </strong>\n                        {project.external_data.description}\n                      </p>\n                    </Grid>\n                  </Grid>\n                </Card>\n              ))\n            ) : (\n              <h2>No NFTs Yet...</h2>\n            )}\n          </div>\n        )}\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default Profile\n","import React, { useState, useEffect } from 'react'\nimport {\n  Button,\n  StylesProvider,\n  Container,\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Avatar,\n} from '@material-ui/core'\nimport Rating from '@material-ui/lab/Rating'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport { useParams, useLocation } from 'react-router-dom'\nimport CircularStatic from '../commons/CircularProgressWithLabel'\nimport './CovalentAllNftsByContract.css'\nimport chef from '../images/chef_.jpg'\nimport { NavLink } from 'react-router-dom'\n\nfunction CovalentAllNftsByContract({ account }) {\n  const { recipeId } = useParams()\n  const [loading, setLoading] = useState(false)\n  const userWallet = '0xAF67cbD8fb00759C3b4667beAcfBB3600e25476A'\n  const [nfts, setNfts] = useState({})\n  const [items, setItems] = useState([])\n  const [data, setData] = useState({})\n  const { state = {} } = useLocation()\n\n  const covalentNfts = async () => {\n    const covalentAPI = 'ckey_d4115699196e4d238fa138e180c'\n    const chefContractAddress = '0x1a2FCb5F2704f1fF8eFF26668f63D001b42bF80B'\n    try {\n      const nfts = await fetch(\n        `https://api.covalenthq.com/v1/80001/tokens/${chefContractAddress}/nft_token_ids/?quote-currency=USD&format=JSON&key=${covalentAPI}`,\n      )\n      const allNFTS = await nfts.json()\n      if (allNFTS) {\n        setNfts(allNFTS)\n        setItems(allNFTS?.data?.items)\n        setLoading(false)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    covalentNfts()\n  }, [])\n\n  useEffect(() => {\n    const getImage = (ipfsURL) => {\n      if (!ipfsURL) return\n      ipfsURL = ipfsURL.split('://')\n      return 'https://ipfs.io/ipfs/' + ipfsURL[1]\n    }\n\n    const getMetadata = async () => {\n      let data = await fetch(`https://ipfs.io/ipfs/${recipeId}/metadata.json`)\n      data = await data.json()\n      const dataArray = data.description.split(',')\n      data.creator = dataArray[0]\n      data.type = dataArray[1]\n      data.intro = dataArray[2]\n      data.image = getImage(data.image)\n      setData(data)\n    }\n    if (recipeId) {\n      getMetadata()\n      getImage()\n    }\n  }, [recipeId, account])\n\n  return (\n    <StylesProvider injectFirst>\n      <Container style={{ paddingTop: '1rem', paddingBottom: '6rem' }}>\n        <h2>Contract Stats from Covalent API</h2>\n        {loading ? (\n          <CircularStatic />\n        ) : (\n          <div>\n            {nfts && nfts?.data ? (\n              <div>\n                <p className=\"info\">\n                  <strong>Last update: </strong> {nfts.data.updated_at}\n                </p>\n                <p>\n                  <strong className=\"info\">Total Count: </strong>\n                  {nfts.data.pagination.total_count}\n                </p>\n              </div>\n            ) : (\n              <h2>No data</h2>\n            )}\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Logo</TableCell>\n                    <TableCell>Id</TableCell>\n                    <TableCell>Contract name</TableCell>\n                    <TableCell>Contract address</TableCell>\n                    <TableCell>Contract symbol</TableCell>\n                    <TableCell>Contract decimals</TableCell>\n                    <TableCell>Logo url</TableCell>\n                    <TableCell>View Details</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {items &&\n                    items.map((legislator, key) => {\n                      let overallRating, overallBlkRating\n                      if (legislator.AverageRating) {\n                        overallRating = legislator.overallRating\n                      }\n                      if (legislator.AverageBLKRating) {\n                        overallBlkRating = legislator.overallBlkRating\n                      }\n                      return (\n                        <TableRow key={key}>\n                          <TableCell>\n                            <Avatar alt=\"nft logo\" src={legislator.photoUrl} />\n                          </TableCell>\n                          <TableCell>{legislator.token_id}</TableCell>\n                          <TableCell>{legislator.contract_name}</TableCell>\n                          <TableCell className=\"line-break\">\n                            {legislator.contract_address}\n                          </TableCell>\n                          <TableCell>\n                            {legislator.contract_ticker_symbol}\n                          </TableCell>\n                          <TableCell>{legislator.contract_decimals}</TableCell>\n                          <TableCell className=\"line-break\">\n                            {legislator.logo_url}\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            <a\n                              href={`https://mumbai.polygonscan.com/address/${legislator.contract_address}`}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                            >\n\n                              <ChevronRightIcon fontSize=\"large\" style={{color:'blue'}} />\n                            </a>\n                          </TableCell>\n                        </TableRow>\n                      )\n                    })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n        )}\n      </Container>\n    </StylesProvider>\n  )\n}\n\nexport default CovalentAllNftsByContract\n","import React from 'react'\nimport './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Navbar } from './components/layout/navbar/Navbar'\nimport Footer from './components/layout/footer/Footer'\nimport Home from './components/home/Home'\nimport DetailsRecipie from './components/details-recipe/DetailsRecipe'\nimport CreateRecipe from './components/create-recipe/CreateRecipe'\nimport LadingPage from './components/landing-page/LandingPage'\nimport Profile from './components/profiles/Profile'\nimport CovalentAllNftsByContract from './components/covalent-allNftsByContract/CovalentAllNftsByContract'\nimport Web3 from 'web3'\nimport { useMoralis } from 'react-moralis'\nimport playerAbi from './artifacts/contracts/Player.sol/Player.json'\nconst chefContractAddress = '0x1a2FCb5F2704f1fF8eFF26668f63D001b42bF80B'\n\nfunction App() {\n  const [account, setAccount] = React.useState('')\n  const [contractData, setContractData] = React.useState('')\n  const { authenticate, isAuthenticated, user } = useMoralis()\n\n  const moralisLogin = async () => {\n    if (!isAuthenticated) {\n      return (\n        <div>\n          <button onClick={() => authenticate()}>Authenticate</button>\n        </div>\n      )\n    }\n  }\n\n  const loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.request({ method: 'eth_requestAccounts' })\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    } else {\n      window.alert(\n        'Non-Ethereum browser detected. You should consider trying Metamask!',\n      )\n    }\n  }\n\n  const getContract = async () => {\n    try {\n      const web3 = window.web3\n      const accounts = await web3.eth.getAccounts()\n      setAccount(accounts[0])\n      const abi = playerAbi.abi\n      const address = chefContractAddress\n      const myContract = new web3.eth.Contract(abi, address)\n      setContractData(myContract)\n    } catch (error) {\n      window.alert(\n        'Contract is not deployed to the detected network. Please connect to Mumbai network!',\n      )\n    }\n  }\n\n  const connectWallet = async () => {\n    console.log('login')\n    await loadWeb3()\n    await getContract()\n  }\n\n  console.log('contractData', contractData)\n\n  return (\n    <Router className=\"App\">\n      <div className=\"App\">\n        <Navbar\n          authenticate={authenticate}\n          isAuthenticated={isAuthenticated}\n          connectWallet={connectWallet}\n          user={user}\n          account={account}\n        />\n        <Route exact path=\"/\" component={LadingPage} />\n        <Route exact path=\"/collections\" component={Home} />\n\n        <Switch>\n          <Route exact path=\"/create-recipe\" component={CreateRecipe} />\n          <Router path=\"/profile/:profileId\">\n            <Profile user={user} account={account} />\n          </Router>\n\n          <Route path=\"/recipe/:recipeId\">\n            <DetailsRecipie account={account} contractData={contractData} />\n          </Route>\n\n          <Route path=\"/all-nfts-contract\">\n            <CovalentAllNftsByContract\n              account={account}\n              contractAddress={chefContractAddress}\n            />\n          </Route>\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { MoralisProvider } from 'react-moralis'\n\nReactDOM.render(\n  <MoralisProvider\n    appId=\"5LhsLohskYuBSYKqGhK3xWCsspyTdKBKcKLcgjDz\"\n    serverUrl=\"https://yu7pggfbxnsd.usemoralis.com:2053/server\"\n  >\n    <App />\n  </MoralisProvider>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 618;"],"sourceRoot":""}